<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MoocDownloader.Controls"
                    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:models="clr-namespace:MoocDownloader.Models">
    <!--  Common  -->
    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="icon:PackIconUnicons">
        <Setter Property="Width" Value="12" />
        <Setter Property="Height" Value="12" />
    </Style>

    <Style x:Key="SeparatorStyle" TargetType="Rectangle">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="2" />
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="Fill" Value="{DynamicResource BorderBrush}" />
    </Style>

    <Style x:Key="ControlButtonStyle" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="45" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E8EBEF" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#D7DCE6" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Tag" Value="Danger" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--  Download List Tab  -->
    <Style x:Key="DownloadListTabControlStyle" TargetType="TabControl">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                BorderBrush="{DynamicResource SecondaryBorderBrush}"
                                BorderThickness="0,0,0,1">
                            <UniformGrid Panel.ZIndex="1"
                                         IsItemsHost="True"
                                         KeyboardNavigation.TabIndex="1"
                                         Rows="1" />
                        </Border>

                        <Border Grid.Row="1">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="0"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DownloadListTabItemStyle" TargetType="TabItem">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.Resources>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="icon:PackIconUnicons">
                                <Setter Property="Width" Value="12" />
                                <Setter Property="Height" Value="12" />
                                <Setter Property="Margin" Value="0,0,10,0" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </Grid.Resources>
                        <Border Padding="10" Cursor="Hand">
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <icon:PackIconUnicons Foreground="{TemplateBinding Foreground}" Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}" />
                                <TextBlock Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Header}" />
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--  Detail Tab  -->
    <Style x:Key="DetailTabControlStyle" TargetType="TabControl">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0"
                                BorderBrush="{DynamicResource SecondaryBorderBrush}"
                                BorderThickness="0,0,0,1">
                            <UniformGrid Panel.ZIndex="1"
                                         IsItemsHost="True"
                                         KeyboardNavigation.TabIndex="1"
                                         Rows="1" />
                        </Border>
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                          Grid.Row="1"
                                          Margin="0"
                                          Content="{TemplateBinding SelectedContent}"
                                          ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                          ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DetailTabItemStyle" TargetType="TabItem">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.Resources>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="icon:PackIconUnicons">
                                <Setter Property="Width" Value="12" />
                                <Setter Property="Height" Value="12" />
                                <Setter Property="Margin" Value="0,0,10,0" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </Grid.Resources>
                        <Border Padding="10" Cursor="Hand">
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <icon:PackIconUnicons Foreground="{TemplateBinding Foreground}" Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}" />
                                <TextBlock Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Header}" />
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--  Detail Section  -->
    <Style x:Key="DetailSectionStyle" TargetType="GroupBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
                        </Border>

                        <Border Grid.Row="1" Margin="0,10,0,0">
                            <ContentPresenter ContentSource="Content" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Queue List  -->
    <DataTemplate x:Key="QueueDataTemplate" DataType="{x:Type models:Course}">
        <controls:QueueItem x:Name="QueueItem" Course="{Binding}" />

        <DataTemplate.Resources>
            <Style TargetType="controls:QueueItem">
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </DataTemplate.Resources>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                <Setter TargetName="QueueItem" Property="Background" Value="{DynamicResource ItemSelectedBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="QueueItem" Property="Background" Value="{DynamicResource ItemMouseOverBrush}" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="QueueTemplate">
        <ScrollViewer CanContentScroll="False"
                      HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Auto">
            <ItemsPresenter />
        </ScrollViewer>
    </ControlTemplate>

    <ItemsPanelTemplate x:Key="QueuePanelTemplate">
        <StackPanel />
    </ItemsPanelTemplate>

    <ControlTemplate x:Key="QueueItemTemplate" TargetType="ListBoxItem">
        <ContentPresenter />
    </ControlTemplate>

    <Style x:Key="QueueListStyle" TargetType="ListBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{StaticResource QueueItemTemplate}" />
    </Style>

    <!--  Ready List  -->
    <DataTemplate x:Key="ReadyDataTemplate" DataType="{x:Type models:Course}">
        <controls:ReadyItem x:Name="ReadyItem" Course="{Binding}" />

        <DataTemplate.Resources>
            <Style TargetType="controls:ReadyItem">
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </DataTemplate.Resources>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                <Setter TargetName="ReadyItem" Property="Background" Value="{DynamicResource ItemSelectedBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ReadyItem" Property="Background" Value="{DynamicResource ItemMouseOverBrush}" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="ReadyTemplate">
        <ScrollViewer CanContentScroll="False"
                      HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Auto">
            <ItemsPresenter />
        </ScrollViewer>
    </ControlTemplate>

    <ItemsPanelTemplate x:Key="ReadyPanelTemplate">
        <StackPanel />
    </ItemsPanelTemplate>

    <ControlTemplate x:Key="ReadyItemTemplate" TargetType="ListBoxItem">
        <ContentPresenter />
    </ControlTemplate>

    <Style x:Key="ReadyListStyle" TargetType="ListBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{StaticResource ReadyItemTemplate}" />
    </Style>

    <!--  Trash List  -->
    <DataTemplate x:Key="TrashDataTemplate" DataType="{x:Type models:Course}">
        <controls:TrashItem x:Name="TrashItem" Course="{Binding}" />

        <DataTemplate.Resources>
            <Style TargetType="controls:TrashItem">
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </DataTemplate.Resources>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                <Setter TargetName="TrashItem" Property="Background" Value="{DynamicResource ItemSelectedBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="TrashItem" Property="Background" Value="{DynamicResource ItemMouseOverBrush}" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="TrashTemplate">
        <ScrollViewer CanContentScroll="False"
                      HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Auto">
            <ItemsPresenter />
        </ScrollViewer>
    </ControlTemplate>

    <ItemsPanelTemplate x:Key="TrashPanelTemplate">
        <StackPanel />
    </ItemsPanelTemplate>

    <ControlTemplate x:Key="TrashItemTemplate" TargetType="ListBoxItem">
        <ContentPresenter />
    </ControlTemplate>

    <Style x:Key="TrashListStyle" TargetType="ListBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{StaticResource TrashItemTemplate}" />
    </Style>

    <!--  Unit List  -->
    <DataTemplate x:Key="UnitDataTemplate">
        <controls:UnitItem x:Name="UnitItem" />

        <DataTemplate.Resources>
            <Style TargetType="controls:UnitItem">
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </DataTemplate.Resources>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                <Setter TargetName="UnitItem" Property="Background" Value="{DynamicResource ItemSelectedBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="UnitItem" Property="Background" Value="{DynamicResource ItemMouseOverBrush}" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="UnitTemplate">
        <ScrollViewer CanContentScroll="False"
                      HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Auto">
            <ItemsPresenter />
        </ScrollViewer>
    </ControlTemplate>

    <ItemsPanelTemplate x:Key="UnitPanelTemplate">
        <StackPanel />
    </ItemsPanelTemplate>

    <ControlTemplate x:Key="UnitItemTemplate" TargetType="ListBoxItem">
        <ContentPresenter />
    </ControlTemplate>

    <Style x:Key="UnitListStyle" TargetType="ListBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{StaticResource UnitItemTemplate}" />
    </Style>

    <!--  Context Menu  -->
    <Style BasedOn="{StaticResource MenuItemBaseStyle}" TargetType="MenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="26" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"
                                              Margin="0,0,10,0"
                                              VerticalAlignment="Center"
                                              ContentSource="Icon" />
                            <ContentPresenter Grid.Column="1"
                                              ContentSource="Header"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuItemIconStyle" TargetType="icon:PackIconUnicons">
        <Setter Property="Height" Value="13" />
        <Setter Property="Width" Value="13" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}" />
    </Style>


    <!--  Style of Data Grid  -->
    <Style x:Key="DefaultDataGridCellStyle"
           BasedOn="{StaticResource DataGridCellStyle}"
           TargetType="DataGridCell">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DefaultDataGridRowStyle"
           BasedOn="{StaticResource DataGridRowStyle}"
           TargetType="DataGridRow">
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="IsSelected" Value="false" />
                </MultiTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>